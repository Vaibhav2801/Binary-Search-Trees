class BSTIterator {
  private:
  stack<TreeNode*>s;
public:
    BSTIterator(TreeNode* root) {
        pushAll(root);
    }
    
    int next() {
        TreeNode* temp=s.top();
        s.pop();
        pushAll(temp->right);
        return temp->val;
    }
    
    bool hasNext() {
        return !s.empty();
    }
    private:
    void pushAll(TreeNode* root){
        if(root==NULL)  return;
        s.push(root);
        pushAll(root->left);
    }
};

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator* obj = new BSTIterator(root);
 * int param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */
